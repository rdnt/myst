name: Build and test
on:
  push:
    branches: [ main ]
  pull_request:
jobs:
  build-server:
    name: Build and test server
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ 1.18 ]
    steps:
      - name: Checkout repository
        id: checkout-repository
        uses: actions/checkout@v3
          - name: Cache go modules
            id: cache-go-modules
            uses: actions/cache@v2
            with:
              path: ~/go/pkg/mod
              key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
              restore-keys: ${{ runner.os }}-go-
      - name: Install Go ${{ matrix.go-version }}
        id: install-go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Download go modules
        id: download-go-modules
        run: go mod download
      - name: Build server
        id: build-server
        run: go build ./cmd/server
      - name: Test server
        id: test-server
        run: go test ./cmd/server/... ./internal/server/...
  build-client:
    name: Build and test client
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ 1.18 ]
    steps:
      - name: Checkout repository
        id: checkout-repository
        uses: actions/checkout@v3
      - name: Cache go modules
        id: cache-go-modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-
      - name: Install Go ${{ matrix.go-version }}
        id: install-go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Download go modules
        id: download-go-modules
        run: go mod download
      - name: Build client
        id: build-client
        run: go build ./cmd/client
      - name: Test client
        id: test-client
        run: go test ./cmd/client/... ./internal/client/...
  test:
    name: Run integration & package unit tests
    runs-on: ubuntu-latest
    needs:
      - build-server
      - build-client
    steps:
      - name: Checkout repository
        id: checkout-repository
        uses: actions/checkout@v3
      - name: Cache go modules
        id: cache-go-modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-
      - name: Install Go ${{ matrix.go-version }}
        id: install-go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Download go modules
        id: download-go-modules
        run: go mod download
      - name: Run tests
        id: run-tests
        run: go test ./test/... ./pkg/...
