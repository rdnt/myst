name: deploy
on:
  push:
    branches:
      - main
jobs:
  build:
    name: Deploy to DigitalOcean App Platform
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['16']
        go: ['1.17']
    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Install node
      id: setup-node
      uses: actions/setup-node@v2-beta
      with:
        node-version: ${{ matrix.node }}
    - name: Install node modules
      id: install
      uses: bahmutov/npm-install@v1
      with:
        working-directory: ui
    - name: Build UI
      id: build-ui
      run: npm --prefix ui run build
    - name: Install go
      id: setup-go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go }}
    - name: Install go modules
      id: get-modules
      run: go mod download
    - name: Build client
      id: build
      run: GOOS=linux GOARCH=amd64 go build -o build/client ./cmd/client
    - name: Build container image
      run: docker build -t registry.digitalocean.com/rdnt/myst:$(echo $GITHUB_SHA | head -c7) -t registry.digitalocean.com/rdnt/myst:latest .
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      id: login
      run: doctl registry login --expiry-seconds 600
    - name: Push image
      run: docker push registry.digitalocean.com/rdnt/myst:$(echo $GITHUB_SHA | head -c7) && docker push registry.digitalocean.com/rdnt/myst:latest
    - name: Create application deployment
      id: deploy
      run: doctl apps create-deployment ${{ secrets.DIGITALOCEAN_APP_ID }}
