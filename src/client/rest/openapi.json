{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Myst Client REST API",
    "description": "",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Swagger API Team",
      "email": "apiteam@swagger.io",
      "url": "http://swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8081/api",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "description": "Triggers a health check",
        "operationId": "HealthCheck",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/enclave": {
      "post": {
        "description": "Sets up the myst enclave with a master password",
        "operationId": "CreateEnclave",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEnclaveRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Enclave created"
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Check if the Myst enclave is set up",
        "operationId": "Enclave",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/authenticate": {
      "post": {
        "description": "Attempts to authenticate the user",
        "operationId": "Authenticate",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "description": "Registers a new account",
        "operationId": "Register",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "deprecated": true,
        "description": "Logs in to the remote",
        "operationId": "LoginDeprecated",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in"
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "description": "Returns the currently signed in user",
        "operationId": "CurrentUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/keystores": {
      "post": {
        "description": "Creates a new encrypted keystore with the given password",
        "operationId": "CreateKeystore",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateKeystoreRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Keystore",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Keystore"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Returns all keystores",
        "operationId": "Keystores",
        "responses": {
          "200": {
            "description": "Keystores",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Keystores"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/keystore/{keystoreId}": {
      "parameters": [
        {
          "name": "keystoreId",
          "in": "path",
          "required": true,
          "description": "unique identifier for a keystore",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Get a keystore if it exists and return it",
        "operationId": "Keystore",
        "responses": {
          "200": {
            "description": "Keystore",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Keystore"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a keystore",
        "operationId": "DeleteKeystore",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/keystore/{keystoreId}/entries": {
      "post": {
        "description": "Creates a new entry and adds it to the keystore",
        "operationId": "CreateEntry",
        "parameters": [
          {
            "name": "keystoreId",
            "in": "path",
            "required": true,
            "description": "unique identifier for a keystore",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEntryRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Entry",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Entry"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/keystore/{keystoreId}/entry/{entryId}": {
      "patch": {
        "description": "Update a keystore entry",
        "operationId": "UpdateEntry",
        "parameters": [
          {
            "name": "keystoreId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEntryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entry",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Entry"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a keystore entry",
        "operationId": "DeleteEntry",
        "parameters": [
          {
            "name": "keystoreId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/keystore/{keystoreId}/invitations": {
      "parameters": [
        {
          "name": "keystoreId",
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Create a keystore invitation",
        "operationId": "CreateInvitation",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvitationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Invitation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/invitation/{invitationId}": {
      "parameters": [
        {
          "name": "invitationId",
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      ],
      "patch": {
        "description": "Accepts an invitation",
        "operationId": "AcceptInvitation",
        "responses": {
          "200": {
            "description": "Invitation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Finalizes an invitation",
        "operationId": "FinalizeInvitation",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinalizeInvitationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Invitation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Declines/cancels an invitation",
        "operationId": "DeclineOrCancelInvitation",
        "responses": {
          "200": {
            "description": "Invitation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Returns an invitation",
        "operationId": "GetInvitation",
        "responses": {
          "200": {
            "description": "Invitation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/invitations": {
      "get": {
        "description": "Get all keystore invitations",
        "operationId": "GetInvitations",
        "responses": {
          "200": {
            "description": "Invitations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitations"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateKeystoreRequest": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "CreateEnclaveRequest": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          }
        },
        "required": [
          "password"
        ]
      },
      "UnlockKeystoreRequest": {
        "type": "object",
        "required": [
          "password"
        ],
        "properties": {
          "password": {
            "type": "string"
          }
        }
      },
      "AuthenticateRequest": {
        "type": "object",
        "required": [
          "password"
        ],
        "properties": {
          "password": {
            "type": "string"
          }
        }
      },
      "CreateEntryRequest": {
        "type": "object",
        "required": [
          "website",
          "username",
          "password",
          "notes"
        ],
        "properties": {
          "website": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          }
        }
      },
      "UpdateEntryRequest": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          }
        }
      },
      "Keystores": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Keystore"
        }
      },
      "Keystore": {
        "type": "object",
        "required": [
          "id",
          "remoteId",
          "readOnly",
          "name",
          "entries"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "remoteId": {
            "type": "string"
          },
          "readOnly": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Entry"
            }
          }
        }
      },
      "Entry": {
        "type": "object",
        "required": [
          "id",
          "website",
          "username",
          "password",
          "notes"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          }
        }
      },
      "CreateInvitationRequest": {
        "type": "object",
        "required": [
          "invitee"
        ],
        "properties": {
          "invitee": {
            "type": "string"
          }
        }
      },
      "FinalizeInvitationRequest": {
        "type": "object",
        "properties": {
          "remoteKeystoreId": {
            "type": "string"
          },
          "inviteePublicKey": {
            "type": "string",
            "format": "byte"
          }
        },
        "required": [
          "remoteKeystoreId",
          "inviteePublicKey"
        ]
      },
      "Invitations": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Invitation"
        }
      },
      "Invitation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "keystore": {
            "$ref": "#/components/schemas/Keystore"
          },
          "inviter": {
            "$ref": "#/components/schemas/User"
          },
          "invitee": {
            "$ref": "#/components/schemas/User"
          },
          "encryptedKeystoreKey": {
            "type": "string",
            "format": "byte"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "accepted",
              "declined",
              "deleted",
              "finalized"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "acceptedAt": {
            "type": "string",
            "format": "date-time"
          },
          "declinedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "keystore",
          "inviter",
          "invitee",
          "encryptedKeystoreKey",
          "status",
          "createdAt",
          "updatedAt",
          "acceptedAt",
          "declinedAt",
          "deletedAt"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "publicKey": {
            "type": "string",
            "format": "byte"
          },
          "icon": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "username",
          "publicKey"
        ]
      },
      "RegisterRequest": {
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "AuthorizationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "token"
        ]
      },
      "Error": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}
